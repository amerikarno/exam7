// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIDomain is a mock of IDomain interface.
type MockIDomain struct {
	ctrl     *gomock.Controller
	recorder *MockIDomainMockRecorder
}

// MockIDomainMockRecorder is the mock recorder for MockIDomain.
type MockIDomainMockRecorder struct {
	mock *MockIDomain
}

// NewMockIDomain creates a new mock instance.
func NewMockIDomain(ctrl *gomock.Controller) *MockIDomain {
	mock := &MockIDomain{ctrl: ctrl}
	mock.recorder = &MockIDomainMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDomain) EXPECT() *MockIDomainMockRecorder {
	return m.recorder
}

// GetResponseBody mocks base method.
func (m *MockIDomain) GetResponseBody() []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResponseBody")
	ret0, _ := ret[0].([]byte)
	return ret0
}

// GetResponseBody indicates an expected call of GetResponseBody.
func (mr *MockIDomainMockRecorder) GetResponseBody() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResponseBody", reflect.TypeOf((*MockIDomain)(nil).GetResponseBody))
}
